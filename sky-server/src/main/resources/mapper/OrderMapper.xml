<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sky.mapper.OrderMapper">


    <insert id="insertOrder" parameterType="com.sky.entity.Orders" useGeneratedKeys="true" keyProperty="id">
        insert into orders
        (number, status, user_id, address_book_id, order_time, checkout_time, pay_method, pay_status, amount, remark,
         user_name, phone, address, consignee, cancel_reason, rejection_reason, cancel_time, estimated_delivery_time,
         delivery_status, delivery_time, pack_amount, tableware_number, tableware_status)
        values (#{number}, #{status}, #{userId}, #{addressBookId}, #{orderTime}, #{checkoutTime}, #{payMethod},
                #{payStatus}, #{amount}, #{remark},
                #{userName}, #{phone}, #{address}, #{consignee}, #{cancelReason}, #{rejectionReason}, #{cancelTime},
                #{estimatedDeliveryTime},
                #{deliveryStatus}, #{deliveryTime}, #{packAmount}, #{tablewareNumber}, #{tablewareStatus})
    </insert>
    <update id="update" parameterType="com.sky.entity.Orders">
        update orders
        <set>
            <if test="cancelReason != null and cancelReason!='' ">
                cancel_reason=#{cancelReason},
            </if>
            <if test="rejectionReason != null and rejectionReason!='' ">
                rejection_reason=#{rejectionReason},
            </if>
            <if test="cancelTime != null">
                cancel_time=#{cancelTime},
            </if>
            <if test="payStatus != null">
                pay_status=#{payStatus},
            </if>
            <if test="payMethod != null">
                pay_method=#{payMethod},
            </if>
            <if test="checkoutTime != null">
                checkout_time=#{checkoutTime},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="deliveryTime != null">
                delivery_time = #{deliveryTime}
            </if>
        </set>
        where id = #{id}
    </update>
    <update id="updateBatchly">
        <trim prefix="UPDATE orders SET " suffix=" WHERE id IN " suffixOverrides=",">
            <if test="ordersList != null and ordersList.size() > 0">
                <foreach collection="ordersList" item="order" separator=",">
                    <if test="order.status != null"> status = CASE id WHEN #{order.id} THEN #{order.status} END,</if>
                    <if test="order.cancelTime != null"> cancel_time = CASE id WHEN #{order.id} THEN #{order.cancelTime} END,</if>
                    <if test="order.cancelReason != null and order.cancelReason!='' "> cancel_reason = CASE id WHEN #{order.id} THEN #{order.cancelReason} END,</if>
                    <if test="order.rejectionReason != null and order.rejectionReason!='' "> rejection_reason = CASE id WHEN #{order.id} THEN #{order.rejectionReason} END,</if>
                    <if test="order.payStatus != null"> pay_status = CASE id WHEN #{order.id} THEN #{order.payStatus} END,</if>
                    <if test="order.payMethod != null"> pay_method = CASE id WHEN #{order.id} THEN #{order.payMethod} END,</if>
                    <if test="order.checkoutTime != null"> checkout_time = CASE id WHEN #{order.id} THEN #{order.checkoutTime} END,</if>
                    <if test="order.deliveryTime != null"> delivery_time = CASE id WHEN #{order.id} THEN #{order.deliveryTime} END,</if>
                </foreach>
            </if>
        </trim>
        <foreach collection="ordersList" item="order" open="(" separator="," close=")">
            #{order.id}
        </foreach>
    </update>
    <select id="pageQuery" resultType="com.sky.entity.Orders">
        select * from orders
        <where>
            <if test="number != null and number!=''">
                and number like concat('%',#{number},'%')
            </if>
            <if test="phone != null and phone!=''">
                and phone like concat('%',#{phone},'%')
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="beginTime != null">
                and order_time &gt;= #{beginTime}
            </if>
            <if test="endTime != null">
                and order_time &lt;= #{endTime}
            </if>
        </where>
        order by order_time desc
    </select>
    <select id="getTurnoverData" resultType="java.util.Map">
        select date(order_time) as order_date, sum(amount) as amount from orders
        <where>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="dates != null and dates.size() > 0">
                and date(order_time) in
                <foreach collection="dates" item="date" open="(" separator="," close=")">
                    #{date}
                </foreach>
            </if>
        </where>
        group by order_date
        order by order_date
    </select>

</mapper>
